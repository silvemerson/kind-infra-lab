Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/jammy64"

  config.vm.hostname = "kind-lab"
  config.vm.network "private_network", type: "dhcp"

  config.vm.provider "virtualbox" do |vb|
    vb.memory = 4096
    vb.cpus = 2
    vb.name = "kind-infra-lab"
  end

  config.vm.provision "shell", inline: <<-SHELL
    echo "[+] Atualizando pacotes"
    apt-get update && apt-get upgrade -y

    echo "[+] Instalando dependências"
    apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release gnupg2 software-properties-common bash-completion

    echo "[+] Instalando Docker"
    mkdir -p /etc/apt/keyrings
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    echo \
      "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
      $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
    apt-get update
    apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
    usermod -aG docker vagrant

    echo "[+] Instalando kind"
    curl -Lo /usr/local/bin/kind https://kind.sigs.k8s.io/dl/v0.22.0/kind-linux-amd64
    chmod +x /usr/local/bin/kind

    echo "[+] Instalando kubectl"
    curl -LO "https://dl.k8s.io/release/$(curl -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    chmod +x kubectl
    mv kubectl /usr/local/bin/

    echo "[+] Instalando Helm"
    curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

    echo "[+] Ativando autocomplete do kubectl para bash"
    echo "source <(kubectl completion bash)" >> /home/vagrant/.bashrc
    echo "alias k=kubectl" >> /home/vagrant/.bashrc
    echo "complete -F __start_kubectl k" >> /home/vagrant/.bashrc
    chown vagrant:vagrant /home/vagrant/.bashrc

    echo "[✓] Setup concluído. Docker, kind, kubectl, helm e autocomplete instalados."
    echo "[!] Lembre-se de rodar 'newgrp docker' ou logout/login para ativar grupo docker."
  SHELL
end
